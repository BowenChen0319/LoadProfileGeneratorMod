<!--  ReSharper disable UnusedMember.Global  -->
<UserControl x:Class="LoadProfileGenerator.Views.Houses.TransformationDeviceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             d:DesignHeight="3000"
             d:DesignWidth="900"
             mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="35" />
        </Grid.RowDefinitions>
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <Expander IsExpanded="true" Style="{StaticResource ExpanderStyle}">
                    <Expander.Header>
                        <Border Style="{StaticResource GroupBoxHeader}">
                            <TextBlock Text="General" />
                        </Border>
                    </Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.ColumnSpan="2" Style="{StaticResource TextBlockStyle}">
                            A transformation device is used to help with modelling of the transformations between load types.
                            For example a kitchen sink uses warm water when washing hands. Warm water consists of a mixture
                            of cold water and hot water. To have one central point to control the ration of hot to cold water,
                            there is one central transformation device which generates warm water from hot and cold.
                            Another Transformation Device is then used to generate the hot water from gas for example.
                        </TextBlock>
                        <Label Grid.Row="1"
                               Grid.Column="0"
                               Content="_Name"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtTransformationDeviceName}" />
                        <TextBox x:Name="TxtTransformationDeviceName"
                                 Grid.Row="1"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ThisTrafo.Name}" />
                        <Label Grid.Row="2"
                               Grid.Column="0"
                               Content="Description"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtDescription}" />
                        <TextBox x:Name="TxtDescription"
                                 Grid.Row="2"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ThisTrafo.Description}" />

                    </Grid>
                </Expander>


                <Expander IsExpanded="true" Style="{StaticResource ExpanderStyle}">
                    <Expander.Header>
                        <Border Style="{StaticResource GroupBoxHeader}">
                            <TextBlock Text="Input Loadtype" />
                        </Border>
                    </Expander.Header>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.ColumnSpan="2" Style="{StaticResource TextBlockStyle}">
                            In the above example with the sink the input loadtype would be the warm water.
                        </TextBlock>
                        <Label Grid.Row="1"
                               Grid.Column="0"
                               Content="Input Loadtype"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbInputLoadtype}" />
                        <ComboBox Name="CmbInputLoadtype"
                                  Grid.Row="1"
                                  Grid.Column="1"
                                  ItemsSource="{Binding VLoadTypes}"
                                  SelectedItem="{Binding ThisTrafo.LoadTypeIn}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Label Grid.Row="2"
                               Grid.Column="0"
                               Content="Minimum Value Condition"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtMinValue}" />
                        <TextBox x:Name="TxtMinValue"
                                 Grid.Row="2"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ThisTrafo.MinValue}" />
                        <Label Grid.Row="3"
                               Grid.Column="0"
                               Content="Maximum Value Condition"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtMaxValue}" />
                        <TextBox x:Name="TxtMaxValue"
                                 Grid.Row="3"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ThisTrafo.MaxValue}" />
                        <Label Grid.Row="4"
                               Grid.Column="0"
                               Content="Minimum Input Power"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtMinPower}" />
                        <TextBox x:Name="TxtMinPower"
                                 Grid.Row="4"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ThisTrafo.MinimumInputPower}" />
                        <Label Grid.Row="5"
                               Grid.Column="0"
                               Content="Maximum Input Power"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtMaxPower}" />
                        <TextBox x:Name="TxtMaxPower"
                                 Grid.Row="5"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ThisTrafo.MaximumInputPower}" />
                        <TextBlock Grid.Row="6"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Style="{StaticResource TextBlockStyle}"
                                   TextWrapping="WrapWithOverflow">
                            The minimum/maximum value condition and input power work like this: Lets assume
                            you have an air conditioning device that you want to run as soon as the cooling load
                            is above 100W. But the AC device has a minimum power consumption of 500W. Additionally it
                            has a maximum power consumption of 2000W.
                            So you would put in 100 as Minimum Condition, 100000000 (or another really high number) as maximum
                            condition. As minimum power you put in 500, as maximum power 2000.
                        </TextBlock>
                    </Grid>
                </Expander>

                <Expander IsExpanded="true" Style="{StaticResource ExpanderStyle}">
                    <Expander.Header>
                        <Border Style="{StaticResource GroupBoxHeader}">
                            <TextBlock Text="Factor Curve" />
                        </Border>
                    </Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.ColumnSpan="2" Style="{StaticResource TextBlockStyle}">
                            This option allows you to set a number of factors for the conversion. The real factor is interpolated from that using linear approximation between the two closest points.
                            For points outside of the range the lowest / highest factor will be used.
                        </TextBlock>
                        <Label Grid.Row="1"
                               Grid.Column="0"
                               Content="Input Value"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtInputValue}" />
                        <TextBox Name="TxtInputValue"
                                 Grid.Row="1"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding Path=SelectedItem.ReferenceValue,
                                                ElementName=LstFactors,
                                                Mode=OneWay}" />
                        <Label Grid.Row="2"
                               Grid.Column="0"
                               Content="Factor for this value"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtMatchingFactor}" />
                        <TextBox Name="TxtMatchingFactor"
                                 Grid.Row="2"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding Path=SelectedItem.Factor,
                                                ElementName=LstFactors,
                                                Mode=OneWay}" />
                        <StackPanel Grid.Row="4"
                                    Grid.Column="1"
                                    Orientation="Horizontal">
                            <Button HorizontalAlignment="Right"
                                    Click="BtnAddFactor_Click"
                                    Style="{StaticResource ButtonStyle}">
                                Add Factor
                            </Button>
                            <Button HorizontalAlignment="Left"
                                    Click="BtnRemoveFactor_Click"
                                    Style="{StaticResource ButtonStyle}">
                                Remove Factor
                            </Button>
                        </StackPanel>
                        <Label Grid.Row="5"
                               Grid.Column="0"
                               Content="Factors"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=LstFactors}" />
                        <ListView x:Name="LstFactors"
                                  Grid.Row="5"
                                  Grid.Column="1"
                                  MinHeight="150"
                                  ItemsSource="{Binding ThisTrafo.FactorDatapoints}"
                                  Style="{StaticResource ListViewStyle}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding ReferenceValue}"
                                                    Header="Input Value" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Factor}"
                                                    Header="Factor" />
                                </GridView>
                            </ListView.View>
                        </ListView>


                    </Grid>
                </Expander>

                <Expander IsExpanded="true" Style="{StaticResource ExpanderStyle}">
                    <Expander.Header>
                        <Border Style="{StaticResource GroupBoxHeader}">
                            <TextBlock Text="Factor Conversion Helper" />
                        </Border>
                    </Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.ColumnSpan="2"
                                   Style="{StaticResource TextBlockStyle}"
                                   TextWrapping="WrapWithOverflow">
                            To figure out the conversion factors this section will provide some help.
                        </TextBlock>
                        <Label Grid.Row="1"
                               Grid.Column="0"
                               Content="Input Loadtype"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbOutputLoadtype}" />
                        <ComboBox Name="CmbConversionInputLoadtype"
                                  Grid.Row="1"
                                  Grid.Column="1"
                                  IsEnabled="False"
                                  ItemsSource="{Binding VLoadTypes}"
                                  SelectedItem="{Binding ThisTrafo.LoadTypeIn}"
                                  SelectionChanged="CmbConversionInputLoadtype_OnSelectionChanged"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Label Grid.Row="2"
                               Grid.Column="0"
                               Content="Input Unit"
                               Style="{StaticResource LabelStyle}" />
                        <Label Grid.Row="2"
                               Grid.Column="1"
                               HorizontalAlignment="Left"
                               Content="{Binding ThisTrafo.LoadTypeIn.UnitOfPower}"
                               Style="{StaticResource LabelStyle}" />

                        <!--    -->
                        <Label Grid.Row="3"
                               Grid.Column="0"
                               Content="Output Loadtype"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbOutputLoadtype}" />
                        <ComboBox Name="CmbConversionOutputLoadtype"
                                  Grid.Row="3"
                                  Grid.Column="1"
                                  ItemsSource="{Binding VLoadTypes}"
                                  SelectedItem="{Binding Path=SelectedItem.VLoadType,
                                                         ElementName=LstOutputLoadtypes,
                                                         Mode=OneWay}"
                                  SelectionChanged="CmbConversionInputLoadtype_OnSelectionChanged"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Label Grid.Row="4"
                               Grid.Column="0"
                               Content="Input Unit"
                               Style="{StaticResource LabelStyle}" />
                        <Label Grid.Row="4"
                               Grid.Column="1"
                               HorizontalAlignment="Left"
                               Content="{Binding Path=SelectedItem.VLoadType.UnitOfPower,
                                                 ElementName=LstOutputLoadtypes,
                                                 Mode=OneWay}"
                               Style="{StaticResource LabelStyle}" />

                        <Label Grid.Row="5"
                               Grid.Column="0"
                               Content="Factor"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtFactor}" />
                        <TextBox Name="TxtConversionFactor"
                                 Grid.Row="5"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding Path=SelectedItem.Factor,
                                                ElementName=LstOutputLoadtypes,
                                                Mode=OneWay}"
                                 TextChanged="TxtConversionFactor_OnTextChanged" />
                        <Label Grid.Row="6"
                               Grid.Column="0"
                               Content="Example Quantity"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtExampleQuantity}" />
                        <TextBox Name="TxtExampleQuantity"
                                 Grid.Row="6"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ConversionExampleQuantity}"
                                 TextChanged="TxtExampleQuantity_OnTextChanged" />
                        <Label Grid.Row="7"
                               Grid.Column="0"
                               Content="Example Timespan"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtExampleTimespan}" />
                        <TextBox Name="TxtExampleTimespan"
                                 Grid.Row="7"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ConversionExampleTimespan}"
                                 TextChanged="TxtExampleTimespan_OnTextChanged" />
                        <Label Grid.Row="8"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               Content="{Binding ConversionExample1}"
                               Style="{StaticResource LabelStyle}" />
                        <Label Grid.Row="9"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               Content="{Binding ConversionExample2}"
                               Style="{StaticResource LabelStyle}" />
                        <Label Grid.Row="10"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               Content="{Binding ConversionExample3}"
                               Style="{StaticResource LabelStyle}" />




                    </Grid>
                </Expander>

                <Expander IsExpanded="true" Style="{StaticResource ExpanderStyle}">
                    <Expander.Header>
                        <Border Style="{StaticResource GroupBoxHeader}">
                            <TextBlock Text="Output Loadtypes" />
                        </Border>
                    </Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.ColumnSpan="2"
                                   Style="{StaticResource TextBlockStyle}"
                                   TextWrapping="WrapWithOverflow">
                            In the above example with the sink the output would be a cold water consumption and a hot water consumption with maybe a factor of 0.5 each.
                            Something more complicated might be implemented in the future, like for example adding a dependency on the seasonally changing fresh water
                            temperature, but for now the ratios will have to be fixed or use the factor curve.
                        </TextBlock>
                        <Label Grid.Row="1"
                               Grid.Column="0"
                               Content="Output Loadtype"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbOutputLoadtype}" />
                        <ComboBox Name="CmbOutputLoadtype"
                                  Grid.Row="1"
                                  Grid.Column="1"
                                  ItemsSource="{Binding VLoadTypes}"
                                  SelectedItem="{Binding Path=SelectedItem.VLoadType,
                                                         ElementName=LstOutputLoadtypes,
                                                         Mode=OneWay}"
                                  SelectionChanged="CmbOutputLoadtype_OnSelectionChanged"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Label Grid.Row="2"
                               Grid.Column="0"
                               Content="Unit"
                               Style="{StaticResource LabelStyle}" />
                        <Label Grid.Row="2"
                               Grid.Column="1"
                               HorizontalAlignment="Left"
                               Content="{Binding SelectedOutputLoadtype.UnitOfPower}"
                               Style="{StaticResource LabelStyle}" />

                        <Label Grid.Row="3"
                               Grid.Column="0"
                               Content="Factor"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtFactor}" />
                        <TextBox Name="TxtFactor"
                                 Grid.Row="3"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding Path=SelectedItem.Factor,
                                                ElementName=LstOutputLoadtypes,
                                                Mode=OneWay}" />
                        <Label Grid.Row="4"
                               Grid.Column="0"
                               Content="Factor Type"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbFactorType}" />
                        <ComboBox Name="CmbFactorType"
                                  Grid.Row="4"
                                  Grid.Column="1"
                                  ItemsSource="{Binding FactorTypes}"
                                  SelectedItem="{Binding Path=SelectedItem.FactorTypeStr,
                                                         ElementName=LstOutputLoadtypes,
                                                         Mode=OneWay}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <StackPanel Grid.Row="5"
                                    Grid.Column="1"
                                    Orientation="Horizontal">
                            <Button HorizontalAlignment="Right"
                                    Click="BtnAddLoadtype_Click"
                                    Style="{StaticResource ButtonStyle}">
                                Add Output Loadtype
                            </Button>
                            <Button HorizontalAlignment="Left"
                                    Click="BtnRemoveLoadtype_Click"
                                    Style="{StaticResource ButtonStyle}">
                                Remove Output Loadtype
                            </Button>
                        </StackPanel>
                        <Label Grid.Row="6"
                               Grid.Column="0"
                               Content="Output Loadtypes"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=LstOutputLoadtypes}" />
                        <ListView x:Name="LstOutputLoadtypes"
                                  Grid.Row="6"
                                  Grid.Column="1"
                                  MinHeight="150"
                                  ItemsSource="{Binding ThisTrafo.LoadTypesOut}"
                                  Style="{StaticResource ListViewStyle}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="Auto" Header="Name of the load type" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Factor}"
                                                    Header="Factor" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding FactorType}"
                                                    Header="Factor Type" />
                                </GridView>
                            </ListView.View>
                        </ListView>


                    </Grid>
                </Expander>
                <Expander IsExpanded="true" Style="{StaticResource ExpanderStyle}">
                    <Expander.Header>
                        <Border Style="{StaticResource GroupBoxHeader}">
                            <TextBlock Text="Conditions" />
                        </Border>
                    </Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <!--  0  -->
                        <TextBlock Grid.Row="0"
                                   Grid.ColumnSpan="2"
                                   Style="{StaticResource TextBlockStyle}"
                                   TextWrapping="WrapWithOverflow">
                            Conditions determine when a transformation device can be active. This is used for example to model a fuel cell that can only be active if
                            the storage tank has a certain minimum level. If there is no condition at all then the device is always active. Select a variable
                            as trigger condition here and set the same variable as signal on the energy storage device to make things work.
                        </TextBlock>
                        <!--  1  -->
                        <Label Grid.Row="1"
                               Grid.Column="0"
                               Content="Variable"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbVariable}" />
                        <ComboBox Name="CmbVariable"
                                  Grid.Row="1"
                                  Grid.Column="1"
                                  ItemsSource="{Binding Variables}"
                                  SelectedItem="{Binding Path=SelectedItem.Variable,
                                                         ElementName=LstConditions,
                                                         Mode=OneWay}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <!--  2  -->
                        <Label Grid.Row="2"
                               Grid.Column="0"
                               Content="Condition Loadtype"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbConditionLoadtype}" />
                        <!--  3  -->
                        <!--  5  -->
                        <Label Grid.Row="5"
                               Grid.Column="0"
                               Content="Minimum Value"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtCondMinValue}" />
                        <TextBox Name="TxtCondMinValue"
                                 Grid.Row="5"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding Path=SelectedItem.MinValue,
                                                ElementName=LstConditions,
                                                Mode=OneWay}" />
                        <!--  6  -->
                        <Label Grid.Row="6"
                               Grid.Column="0"
                               Content="Maximum Value"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtCondMaxValue}" />
                        <TextBox Name="TxtCondMaxValue"
                                 Grid.Row="6"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding Path=SelectedItem.MaxValue,
                                                ElementName=LstConditions,
                                                Mode=OneWay}" />
                        <!--  7  -->
                        <StackPanel Grid.Row="7"
                                    Grid.Column="1"
                                    Orientation="Horizontal">
                            <Button HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Click="BtnAddCondition_Click"
                                    Style="{StaticResource ButtonStyle}">
                                Add Transformation Condition
                            </Button>
                            <Button HorizontalAlignment="Left"
                                    Click="BtnRemoveCondition_Click"
                                    Style="{StaticResource ButtonStyle}">
                                Remove Transformation Condition
                            </Button>
                        </StackPanel>
                        <!--  8  -->
                        <Label Grid.Row="8"
                               Grid.Column="0"
                               Content="Conditions"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=LstOutputLoadtypes}" />
                        <ListView x:Name="LstConditions"
                                  Grid.Row="8"
                                  Grid.Column="1"
                                  MinHeight="150"
                                  ItemsSource="{Binding ThisTrafo.Conditions}"
                                  Style="{StaticResource ListViewStyle}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding SelectedConditionTypeStr}"
                                                    Header="Type" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding TextDescription}"
                                                    Header="Description" />
                                </GridView>
                            </ListView.View>
                        </ListView>


                    </Grid>
                </Expander>
                <Expander IsExpanded="true" Style="{StaticResource ExpanderStyle}">
                    <Expander.Header>
                        <Border Style="{StaticResource GroupBoxHeader}">
                            <TextBlock Text="Uses" />
                        </Border>
                    </Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />

                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.ColumnSpan="2" Style="{StaticResource TextBlockStyle}">Here you can get a list where this item is used.</TextBlock>
                        <Button Grid.Row="1"
                                Width="75"
                                HorizontalAlignment="Right"
                                Click="BtnRefreshUsedIn_Click"
                                Content="refresh"
                                Style="{StaticResource ButtonStyle}" />
                        <ListView x:Name="LstUses"
                                  Grid.Row="2"
                                  MinHeight="150"
                                  ItemsSource="{Binding UsedIn}"
                                  MouseDoubleClick="LstUses_MouseDoubleClick"
                                  Style="{StaticResource ListViewStyle}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Item}"
                                                    Header="Name" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding TypeDescription}"
                                                    Header="Type" />
                                </GridView>
                            </ListView.View>
                        </ListView>

                    </Grid>


                </Expander>
            </StackPanel>
        </ScrollViewer>

        <DockPanel Grid.Row="1">
            <Border HorizontalAlignment="Left" Style="{StaticResource ObjectLabelBox}">
                <TextBlock Text="{Binding ItemName}" />
            </Border>
            <StackPanel HorizontalAlignment="Right"
                        DockPanel.Dock="Right"
                        Orientation="Horizontal">
                <Button Width="75"
                        HorizontalAlignment="Right"
                        Click="Delete_Click"
                        Content="delete"
                        Style="{StaticResource ButtonStyle}" />
                <Button Width="75"
                        HorizontalAlignment="Right"
                        Click="CloseClick"
                        Content="Close"
                        Style="{StaticResource ButtonStyle}" />
            </StackPanel>
        </DockPanel>
    </Grid>
</UserControl>
<!--  ReSharper restore UnusedMember.Global  -->