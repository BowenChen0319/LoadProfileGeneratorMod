<!--  ReSharper disable UnusedMember.Global  -->
<UserControl x:Class="LoadProfileGenerator.Views.Households.AffordanceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:usercontrols1="clr-namespace:LoadProfileGenerator.Controls.Usercontrols"
             d:DesignHeight="4500"
             d:DesignWidth="800"
             Loaded="UserControl_Loaded"
             mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="35" />
        </Grid.RowDefinitions>
        <ScrollViewer x:Name="ScrollViewer1" VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <Expander IsExpanded="True" Style="{StaticResource ExpanderStyle}">
                    <Expander.Header>
                        <Border Style="{StaticResource GroupBoxHeader}">
                            <TextBlock Text="General" />
                        </Border>
                    </Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.ColumnSpan="2"
                                   Style="{StaticResource TextBlockStyle}"
                                   TextWrapping="WrapWithOverflow">
                            Here is a list of all affordances which have real devices instead of device categories. If there is a real
                            device instead of a device category, then the energy intensity setting won't work because the devices can't
                            be swapped out for others with more or less energy consumption. The purpose of this view is just to provide an
                            overview for quickly checking if everything is set correctly.
                        </TextBlock>
                        <!--  name  -->
                        <Label Grid.Row="1"
                               Grid.Column="0"
                               Content="Name"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=PersonName}" />
                        <TextBox x:Name="PersonName"
                                 Grid.Row="1"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ThisAffordance.Name}" />
                        <!--  description  -->
                        <Label Grid.Row="2"
                               Grid.Column="0"
                               Content="Description"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtDescription}" />
                        <TextBox x:Name="TxtDescription"
                                 Grid.Row="2"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ThisAffordance.Description}" />
                        <!--  CmbPersonProfile  -->
                        <Label Grid.Row="3"
                               Grid.Column="0"
                               Content="Person profile"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbPersonProfile}" />
                        <ComboBox Name="CmbPersonProfile"
                                  Grid.Row="3"
                                  Grid.Column="1"
                                  DisplayMemberPath="NameWithTime"
                                  ItemsSource="{Binding Path=Timeprofiles}"
                                  SelectedItem="{Binding Path=ThisAffordance.PersonProfile,
                                                         Mode=TwoWay,
                                                         NotifyOnTargetUpdated=True,
                                                         NotifyOnSourceUpdated=True}"
                                  SelectionChanged="CmbPersonProfileSelectionChanged"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <!--  needs light  -->
                        <CheckBox Grid.Row="4"
                                  Grid.Column="1"
                                  Content="Does this activity need artifical light if executed after dark?"
                                  IsChecked="{Binding ThisAffordance.NeedsLight}"
                                  Style="{StaticResource CheckBoxStyle}" />
                        <Label Grid.Row="5"
                               Grid.Column="0"
                               Content="Minimum age"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=MinimumAge}" />
                        <!--  minimum age  -->
                        <TextBox x:Name="MinimumAge"
                                 Grid.Row="5"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ThisAffordance.MinimumAge}" />
                        <Label Grid.Row="6"
                               Grid.Column="0"
                               Content="Maximum age"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=MaxiumAge}" />
                        <TextBox x:Name="MaxiumAge"
                                 Grid.Row="6"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ThisAffordance.MaximumAge}" />
                        <Label Grid.Row="7"
                               Grid.Column="0"
                               Content="Permitted Gender"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbPermittedGender}" />
                        <ComboBox Name="CmbPermittedGender"
                                  Grid.Row="7"
                                  Grid.Column="1"
                                  ItemsSource="{Binding MyPermittedGenders}"
                                  SelectedItem="{Binding ThisAffordance.PermittedGender}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Label Grid.Row="8"
                               Grid.Column="0"
                               Content="Duration standard deviation"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtDurationStandardDeviation}" />
                        <TextBox x:Name="TxtDurationStandardDeviation"
                                 Grid.Row="8"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ThisAffordance.TimeStandardDeviation}" />
                        <Label Grid.Row="9"
                               Grid.Column="0"
                               Content="Color for the carpet plots"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=BtnPickColor}" />
                        <Button Name="BtnPickColor"
                                Grid.Row="9"
                                Grid.Column="1"
                                Click="BtnPickColorClick"
                                Content="Pick Color"
                                Style="{StaticResource ButtonStyle}" />
                        <Label Grid.Row="10"
                               Grid.Column="0"
                               Content="Category"
                               Style="{StaticResource LabelStyle}" />
                        <ComboBox Grid.Row="10"
                                  Grid.Column="1"
                                  IsEditable="True"
                                  ItemsSource="{Binding AllAffordanceCategories}"
                                  Style="{StaticResource ComboBoxStyle}"
                                  Text="{Binding ThisAffordance.AffCategory}" />
                        <Label Grid.Row="11"
                               Grid.Column="0"
                               Height="28"
                               Content="Time Limit"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbTimeLimit}" />
                        <ComboBox Name="CmbTimeLimit"
                                  Grid.Row="11"
                                  Grid.Column="1"
                                  ItemsSource="{Binding TimeLimits}"
                                  SelectedItem="{Binding ThisAffordance.TimeLimit}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <TextBlock Grid.Row="12"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Style="{StaticResource TextBlockStyle}"
                                   TextWrapping="WrapWithOverflow">
                            The time limit determines when an affordance can be started.
                            It does not determine when it can end. For example if you want to model someone going to between 8:00 and 9:00 and coming back between
                            17:00 and 18:00 then the time limit should be workdays between 8:00 and 9:00. It is usually better to have a bit of slack towards the
                            end in case the person oversleeps or something like that, which depends in the standard deviation of the duration previous activity.
                            The recommendation is therefore to set the time limit betweeen 8:00 and 10:00.
                        </TextBlock>
                        <CheckBox Grid.Row="13"
                                  Grid.Column="1"
                                  Content="Can this affordance interrupt others?"
                                  IsChecked="{Binding ThisAffordance.IsInterrupting}"
                                  Style="{StaticResource CheckBoxStyle}" />
                        <CheckBox Grid.Row="14"
                                  Grid.Column="1"
                                  Content="Can this affordance be interrupted by other affordances?"
                                  IsChecked="{Binding ThisAffordance.IsInterruptable}"
                                  Style="{StaticResource CheckBoxStyle}" />
                        <Label Grid.Row="15"
                               Grid.Column="0"
                               Height="28"
                               Content="Action after interruption by this"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbActionAfterInterruption}" />
                        <ComboBox Name="CmbActionAfterInterruption"
                                  Grid.Row="15"
                                  Grid.Column="1"
                                  ItemsSource="{Binding BodilyActivityLevelDict}"
                                  SelectedItem="{Binding ThisAffordance.ActionAfterInterruptionStr}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Label Grid.Row="16"
                               Grid.Column="0"
                               Height="28"
                               Content="Bodily Activity Level"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbBodilyActivityLevel}" />
                        <ComboBox Name="CmbBodilyActivityLevel"
                                  Grid.Row="16"
                                  Grid.Column="1"
                                  DisplayMemberPath="Value"
                                  ItemsSource="{Binding BodilyActivityLevelDict}"
                                  SelectedValue="{Binding ThisAffordance.BodilyActivityLevel}"
                                  SelectedValuePath="Key"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Button Name="CreateTrait"
                                Grid.Row="17"
                                Grid.Column="1"
                                Click="CreateTrait_OnClick"
                                Style="{StaticResource ButtonStyle}">
                            Create Household Trait for this Affordance
                        </Button>

                        <Button Name="CreateNewAffordance"
                                Grid.Row="18"
                                Grid.Column="1"
                                Click="CreateAffordance_OnClick"
                                Style="{StaticResource ButtonStyle}">
                            Create a new Affordance based on this
                        </Button>
                    </Grid>
                </Expander>
                <Expander IsExpanded="True" Style="{StaticResource ExpanderStyle}">
                    <Expander.Header>
                        <Border Style="{StaticResource GroupBoxHeader}">
                            <TextBlock Text="Import from other affordance" />
                        </Border>
                    </Expander.Header>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />

                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />

                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Label Grid.Column="0"
                               Content="Affordance"
                               Style="{StaticResource LabelStyle}" />
                        <ComboBox Grid.Row="0"
                                  Grid.Column="1"
                                  ItemsSource="{Binding Affordances}"
                                  SelectedItem="{Binding SelectedImportAffordance}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Button Grid.Row="1"
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                Click="BtnImportAffordanceClick"
                                Style="{StaticResource ButtonStyle}">
                            Import everything from this affordance
                        </Button>

                    </Grid>
                </Expander>

                <Expander IsExpanded="True" Style="{StaticResource ExpanderStyle}">
                    <Expander.Header>
                        <Border Style="{StaticResource GroupBoxHeader}">
                            <TextBlock Text="Desire fullfillment" />
                        </Border>
                    </Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0"
                               Grid.Column="0"
                               Content="Desires"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbDesires}" />
                        <ComboBox Name="CmbDesires"
                                  Grid.Row="0"
                                  Grid.Column="1"
                                  ItemsSource="{Binding Desires}"
                                  SelectedItem="{Binding ElementName=LstAffordanceDesires,
                                                         Path=SelectedItem.Desire,
                                                         Mode=OneWay}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Label Grid.Row="1"
                               Grid.Column="0"
                               Content="Satisfaction value [%]"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtSatisfactionValue}" />
                        <TextBox x:Name="TxtSatisfactionValue"
                                 Grid.Row="1"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ElementName=LstAffordanceDesires,
                                                Path=SelectedItem.SatisfactionValuePercent,
                                                Mode=OneWay}" />
                        <StackPanel Grid.Row="2"
                                    Grid.Column="1"
                                    Orientation="Horizontal">
                            <Button HorizontalAlignment="Right"
                                    Click="BtnAddDesireClick"
                                    Style="{StaticResource ButtonStyle}">
                                Add desire
                            </Button>
                            <Button HorizontalAlignment="Left"
                                    Click="BtnRemoveDesireClick"
                                    Style="{StaticResource ButtonStyle}">
                                Remove desire
                            </Button>
                            <Button HorizontalAlignment="Left"
                                    Click="BtnCreateNewDesireClick"
                                    Style="{StaticResource ButtonStyle}">
                                Create new Desire and add it
                            </Button>
                        </StackPanel>
                        <Label Grid.Row="3"
                               Grid.Column="0"
                               Content="Satisfaction values"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=LstAffordanceDesires}" />
                        <ListView x:Name="LstAffordanceDesires"
                                  Grid.Row="3"
                                  Grid.Column="1"
                                  MinHeight="150"
                                  ItemsSource="{Binding ThisAffordance.AffordanceDesires}"
                                  MouseDoubleClick="LstAffordanceDesires_OnMouseDoubleClick"
                                  Style="{StaticResource ListViewStyle}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="Auto" Header="Desire" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding SatisfactionValuePercent}"
                                                    Header="Satisfaction value [%]" />
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Label Grid.Row="4"
                               Grid.Column="0"
                               Content="Random Results"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=ChkRandomResults}" />
                        <CheckBox Name="ChkRandomResults"
                                  Grid.Row="4"
                                  Grid.Column="1"
                                  VerticalAlignment="Top"
                                  IsChecked="{Binding ThisAffordance.RandomDesireResults}"
                                  Style="{StaticResource CheckBoxStyle}">
                            <TextBlock Style="{StaticResource TextBlockStyle}" TextWrapping="WrapWithOverflow">
                                Add a random number of other satisfaction values to the effect at each execution.
                                (For example at work maybe sometimes the person eats something, on other days the work might be entertaining etc.)
                            </TextBlock>
                        </CheckBox>
                        <Label Grid.Row="5"
                               Grid.Column="0"
                               Content="Require all desires"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=ChkRequireAllDesires}" />
                        <CheckBox Name="ChkRequireAllDesires"
                                  Grid.Row="5"
                                  Grid.Column="1"
                                  VerticalAlignment="Top"
                                  IsChecked="{Binding ThisAffordance.RequireAllDesires}"
                                  Style="{StaticResource CheckBoxStyle}">
                            <TextBlock Style="{StaticResource TextBlockStyle}" TextWrapping="WrapWithOverflow">
                                Usually  a person can activate an affordance, if he/she has at least one desire that is satisfied
                                by the affordance. But for some cases such as cooking, this yields unsatisfactory results.
                                For those cases you can chose to require the person to have all the desires for the affordance.
                            </TextBlock>
                        </CheckBox>
                    </Grid>
                </Expander>
                <Expander IsExpanded="True" Style="{StaticResource ExpanderStyle}">
                    <Expander.Header>
                        <Border Style="{StaticResource GroupBoxHeader}">
                            <TextBlock Text="Devices" />
                        </Border>
                    </Expander.Header>
                    <Grid Name="DeviceGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />

                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0"
                                   Grid.Column="0"
                                   Style="{StaticResource TextBlockStyle}"
                                   TextWrapping="WrapWithOverflow">
                            Here you can select the devices which should be activated. The chart below visualizes from when to when these
                            devices run. Because different device actions can have different profiles with different durations,
                            the chart visualizes both the average and the maximum.
                        </TextBlock>
                        <usercontrols1:DeviceSelectorControl x:Name="MyDeviceSelector"
                                                             Grid.Row="1"
                                                             Grid.Column="0"
                                                             ItemsSourceA="{Binding ThisAffordance.AffordanceDevices}"
                                                             OnAddedDevice="MyDeviceSelector_OnOnAddedDevice"
                                                             OnRemovedDevice="MyDeviceSelector_OnOnRemovedDevice"
                                                             UseLoadType="True"
                                                             UseProbability="True"
                                                             UseTimeOffset="True"
                                                             UseTimeProfile="True" />

                    </Grid>
                </Expander>

                <Expander IsExpanded="True" Style="{StaticResource ExpanderStyle}">
                    <Expander.Header>
                        <Border Style="{StaticResource GroupBoxHeader}">
                            <TextBlock Text="Standby" />
                        </Border>
                    </Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />

                        </Grid.RowDefinitions>
                        <TextBlock Style="{StaticResource TextBlockStyle}">
                            This section enables you to define required standby devices. These will be compared to the standby devices as selected for the household by the integrity check.
                            The idea is to make sure that if for example an affordance needs a fridge, you will be reminded to add a fridge.
                        </TextBlock>
                        <usercontrols1:DeviceSelectorControl x:Name="MyStandbySelector"
                                                             Grid.Row="1"
                                                             Grid.Column="0"
                                                             ItemsSourceA="{Binding ThisAffordance.AffordanceStandbys}"
                                                             OnAddedDevice="MyStandby_OnOnAddedDevice"
                                                             OnRemovedDevice="MyStandby_OnOnRemovedDevice"
                                                             UseLoadType="False"
                                                             UseLocation="False"
                                                             UseProbability="False"
                                                             UseTimeDeviation="False"
                                                             UseTimeLimit="False"
                                                             UseTimeOffset="False"
                                                             UseTimeProfile="False" />
                    </Grid>
                </Expander>

                <Expander IsExpanded="True" Style="{StaticResource ExpanderStyle}">
                    <Expander.Header>
                        <Border Style="{StaticResource GroupBoxHeader}">
                            <TextBlock Text="Sub-Affordances" />
                        </Border>
                    </Expander.Header>


                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0"
                               Grid.Column="0"
                               Content="Sub-Affordances"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbSubAffordances}" />
                        <ComboBox Name="CmbSubAffordances"
                                  Grid.Row="0"
                                  Grid.Column="1"
                                  ItemsSource="{Binding SubAffordances}"
                                  SelectedItem="{Binding ElementName=LstSubAffordances,
                                                         Path=SelectedItem.SubAffordance,
                                                         Mode=OneWay}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Label Grid.Row="1"
                               Grid.Column="0"
                               Content="Delay time [min]"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtDelayTime}" />
                        <TextBox x:Name="TxtDelayTime"
                                 Grid.Row="1"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ElementName=LstSubAffordances,
                                                Path=SelectedItem.DelayTime,
                                                Mode=OneWay}" />
                        <StackPanel Grid.Row="4"
                                    Grid.Column="1"
                                    Orientation="Horizontal">
                            <Button HorizontalAlignment="Right"
                                    Click="BtnAddSubAffordanceClick"
                                    Style="{StaticResource ButtonStyle}">
                                Add sub-affordance
                            </Button>
                            <Button HorizontalAlignment="Left"
                                    Click="BtnRemoveSubAffordanceClick"
                                    Style="{StaticResource ButtonStyle}">
                                Remove sub-affordance
                            </Button>
                            <Button HorizontalAlignment="Left"
                                    Click="BtnCreateSubAffordanceClick"
                                    Style="{StaticResource ButtonStyle}">
                                Create new sub-affordance and add it
                            </Button>
                        </StackPanel>
                        <Label Grid.Row="5"
                               Grid.Column="0"
                               Content="Sub-Affordances"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=LstSubAffordances}" />
                        <ListView x:Name="LstSubAffordances"
                                  Grid.Row="5"
                                  Grid.Column="1"
                                  MinHeight="150"
                                  ItemsSource="{Binding ThisAffordance.SubAffordances}"
                                  MouseDoubleClick="LstSubAffordances_OnMouseDoubleClick"
                                  Style="{StaticResource ListViewStyle}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Desc}"
                                                    Header="Name" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Path=DelayTime,
                                                                                   Converter={StaticResource NumberConverter}}"
                                                    Header="Delay time" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding DesireCount}"
                                                    Header="Desires fullfilled" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding DesireList}"
                                                    Header="Desire Names" />
                                </GridView>
                            </ListView.View>
                        </ListView>

                    </Grid>
                </Expander>
                <Expander IsExpanded="True" Style="{StaticResource ExpanderStyle}">
                    <Expander.Header>
                        <Border Style="{StaticResource GroupBoxHeader}">
                            <TextBlock Text="Variable Operations" />
                        </Border>
                    </Expander.Header>


                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0"
                                   Grid.ColumnSpan="2"
                                   Style="{StaticResource TextBlockStyle}"
                                   TextWrapping="WrapWithOverflow">
                            Variables are used to control
                            autonomous devices and other affordances. There are certain situations
                            where an autonomous device has to be turned on by one affordance and turned off by another.
                            One example is the office computer.  It is turned on on the morning and turned off in the evening,
                            no matter what happens in between. Variables are location specific. This means that setting
                            the variable &quot;Computer&quot; to &quot;1&quot; in the office room will only affect
                            autonomous devices in the office. To make it work you need to set the autonomous
                            device with the identical variable. Another use is, for example, counting the dirty
                            dishes and making sure that the dishwasher is only started when a certain number of dirty dishes have
                            accumulated.
                        </TextBlock>
                        <Label Grid.Row="1"
                               Grid.Column="0"
                               Content="Variable"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbOpVariable}" />
                        <ComboBox Name="CmbOpVariable"
                                  Grid.Row="1"
                                  Grid.Column="1"
                                  ItemsSource="{Binding AllVariables}"
                                  SelectedItem="{Binding ElementName=LstOpVariables,
                                                         Path=SelectedItem.Variable,
                                                         Mode=OneWay}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Label Grid.Row="3"
                               Grid.Column="0"
                               Content="Value"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtOpValue}" />
                        <TextBox x:Name="TxtOpValue"
                                 Grid.Row="3"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ElementName=LstOpVariables,
                                                Path=SelectedItem.Value,
                                                Mode=OneWay}" />
                        <Label Grid.Row="4"
                               Grid.Column="0"
                               Content="Location Mode"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbOpLocationMode}" />
                        <ComboBox Name="CmbOpLocationMode"
                                  Grid.Row="4"
                                  Grid.Column="1"
                                  ItemsSource="{Binding LocationModes}"
                                  SelectedItem="{Binding ElementName=LstOpVariables,
                                                         Path=SelectedItem.LocationMode,
                                                         Mode=OneWay}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Label Grid.Row="5"
                               Grid.Column="0"
                               Content="Location"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbOpLocation}" />
                        <ComboBox Name="CmbOpLocation"
                                  Grid.Row="5"
                                  Grid.Column="1"
                                  ItemsSource="{Binding AllLocations}"
                                  SelectedItem="{Binding ElementName=LstOpVariables,
                                                         Path=SelectedItem.Location,
                                                         Mode=OneWay}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Label Grid.Row="6"
                               Grid.Column="0"
                               Content="Action"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbOpAction}" />
                        <ComboBox Name="CmbOpAction"
                                  Grid.Row="6"
                                  Grid.Column="1"
                                  ItemsSource="{Binding AllActions}"
                                  SelectedItem="{Binding ElementName=LstOpVariables,
                                                         Path=SelectedItem.Action,
                                                         Mode=OneWay}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Label Grid.Row="7"
                               Grid.Column="0"
                               Content="Description"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtOpDesc}" />
                        <TextBox x:Name="TxtOpDesc"
                                 Grid.Row="7"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ElementName=LstOpVariables,
                                                Path=SelectedItem.Description,
                                                Mode=OneWay}" />
                        <Label Grid.Row="8"
                               Grid.Column="0"
                               Content="Execution Time"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbOpAction}" />
                        <ComboBox Name="CmbOpExecutionTime"
                                  Grid.Row="8"
                                  Grid.Column="1"
                                  ItemsSource="{Binding ExecutionTimes}"
                                  SelectedItem="{Binding ElementName=LstOpVariables,
                                                         Path=SelectedItem.ExecutionTimeStr,
                                                         Mode=OneWay}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <StackPanel Grid.Row="9"
                                    Grid.Column="1"
                                    Orientation="Horizontal">


                            <Button HorizontalAlignment="Right"
                                    Click="BtnAddVariableOpClick"
                                    Style="{StaticResource ButtonStyle}">
                                Add Variable Operation
                            </Button>
                            <Button HorizontalAlignment="Left"
                                    Click="BtnRemoveVariableOpClick"
                                    Style="{StaticResource ButtonStyle}">
                                Remove Variable Operation
                            </Button>
                        </StackPanel>
                        <Label Grid.Row="10"
                               Grid.Column="0"
                               Content="Variables"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=LstOpVariables}" />
                        <ListView x:Name="LstOpVariables"
                                  Grid.Row="10"
                                  Grid.Column="1"
                                  MinHeight="150"
                                  ItemsSource="{Binding ThisAffordance.ExecutedVariables}"
                                  Style="{StaticResource ListViewStyle}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Variable.Name}"
                                                    Header="Variable Name" />

                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Value}"
                                                    Header="Value" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding LocationMode}"
                                                    Header="Location Mode" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Location}"
                                                    Header="Location" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Action}"
                                                    Header="Action" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Variable.Unit}"
                                                    Header="Unit" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Description}"
                                                    Header="Description" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Variable.Description}"
                                                    Header="Variable Description" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding ExecutionTimeStr}"
                                                    Header="Variable Execution Time" />
                                </GridView>
                            </ListView.View>
                        </ListView>

                    </Grid>
                </Expander>

                <Expander IsExpanded="True" Style="{StaticResource ExpanderStyle}">
                    <Expander.Header>
                        <Border Style="{StaticResource GroupBoxHeader}">
                            <TextBlock Text="Required Variables Values" />
                        </Border>
                    </Expander.Header>


                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0"
                                   Grid.ColumnSpan="2"
                                   Style="{StaticResource TextBlockStyle}"
                                   TextWrapping="WrapWithOverflow">
                            Required variables are
                            conditions that must be met for an affordance to be executed. For example you can use the the
                            variable operations to count up the number of dirty dishes and have the dishwasher set with a condition
                            to only start running with more than 10 dirty dishes. Same for laundry etc.
                            This makes sure that the intervalls fit to the household automatically. Remember to set in the
                            dishwasher an variable operation to reduce the number of dirty dishes too!
                        </TextBlock>
                        <Label Grid.Row="1"
                               Grid.Column="0"
                               Content="Variable"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbReqVariable}" />
                        <ComboBox Name="CmbReqVariable"
                                  Grid.Row="1"
                                  Grid.Column="1"
                                  ItemsSource="{Binding AllVariables}"
                                  SelectedItem="{Binding ElementName=LstReqVariables,
                                                         Path=SelectedItem.Variable,
                                                         Mode=OneWay}"
                                  Style="{StaticResource ComboBoxStyle}" />

                        <Label Grid.Row="3"
                               Grid.Column="0"
                               Content="Variable Value"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtReqVariableValue}" />
                        <TextBox x:Name="TxtReqVariableValue"
                                 Grid.Row="3"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ElementName=LstReqVariables,
                                                Path=SelectedItem.Value,
                                                Mode=OneWay}" />
                        <Label Grid.Row="4"
                               Grid.Column="0"
                               Content="Location Mode"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbReqLocationMode}" />
                        <ComboBox Name="CmbReqLocationMode"
                                  Grid.Row="4"
                                  Grid.Column="1"
                                  ItemsSource="{Binding LocationModes}"
                                  SelectedItem="{Binding ElementName=LstReqVariables,
                                                         Path=SelectedItem.LocationMode,
                                                         Mode=OneWay}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Label Grid.Row="5"
                               Grid.Column="0"
                               Content="Location"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbReqLocation}" />
                        <ComboBox Name="CmbReqLocation"
                                  Grid.Row="5"
                                  Grid.Column="1"
                                  ItemsSource="{Binding AllLocations}"
                                  SelectedItem="{Binding ElementName=LstReqVariables,
                                                         Path=SelectedItem.Location,
                                                         Mode=OneWay}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Label Grid.Row="6"
                               Grid.Column="0"
                               Content="Condition"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=CmbReqCondition}" />
                        <ComboBox Name="CmbReqCondition"
                                  Grid.Row="6"
                                  Grid.Column="1"
                                  ItemsSource="{Binding AllConditions}"
                                  SelectedItem="{Binding ElementName=LstReqVariables,
                                                         Path=SelectedItem.ConditionStr,
                                                         Mode=OneWay}"
                                  Style="{StaticResource ComboBoxStyle}" />
                        <Label Grid.Row="7"
                               Grid.Column="0"
                               Content="Description"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=TxtReqDesc}" />
                        <TextBox x:Name="TxtReqDesc"
                                 Grid.Row="7"
                                 Grid.Column="1"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding ElementName=LstReqVariables,
                                                Path=SelectedItem.Description,
                                                Mode=OneWay}" />
                        <StackPanel Grid.Row="8"
                                    Grid.Column="1"
                                    Orientation="Horizontal">
                            <Button HorizontalAlignment="Right"
                                    Click="BtnAddVariableReqClick"
                                    Style="{StaticResource ButtonStyle}">
                                Add Variable Requirement
                            </Button>
                            <Button HorizontalAlignment="Left"
                                    Click="BtnRemoveVariableReqClick"
                                    Style="{StaticResource ButtonStyle}">
                                Remove Variable Requirement
                            </Button>
                        </StackPanel>
                        <Label Grid.Row="9"
                               Grid.Column="0"
                               Content="Variables"
                               Style="{StaticResource LabelStyle}"
                               Target="{Binding ElementName=LstReqVariables}" />
                        <ListView x:Name="LstReqVariables"
                                  Grid.Row="9"
                                  Grid.Column="1"
                                  MinHeight="150"
                                  ItemsSource="{Binding ThisAffordance.RequiredVariables}"
                                  Style="{StaticResource ListViewStyle}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Variable.Name}"
                                                    Header="Variable Name" />

                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Value}"
                                                    Header="Value" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding LocationMode}"
                                                    Header="Location Mode" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Location}"
                                                    Header="Location" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding ConditionStr}"
                                                    Header="Condition" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Variable.Unit}"
                                                    Header="Unit" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Description}"
                                                    Header="Description" />
                                    <GridViewColumn Width="Auto"
                                                    DisplayMemberBinding="{Binding Variable.Description}"
                                                    Header="Variable Description" />
                                </GridView>
                            </ListView.View>
                        </ListView>

                    </Grid>
                </Expander>


                <Expander IsExpanded="true" Style="{StaticResource ExpanderStyle}">
                    <Expander.Header>
                        <Border Style="{StaticResource GroupBoxHeader}">
                            <TextBlock Text="Used by" />
                        </Border>
                    </Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="671*" />
                            <ColumnDefinition Width="109*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Margin="5,5,0,5" Style="{StaticResource TextBlockStyle}">
                            Here you can get a list where this affordance is used.
                        </TextBlock>
                        <Button Grid.Row="0"
                                Grid.Column="1"
                                Width="75"
                                Margin="0,5,5,5"
                                HorizontalAlignment="Right"
                                Click="BtnRefreshHouseholds_Click"
                                Content="refresh"
                                Style="{StaticResource ButtonStyle}" />
                        <ListView Name="LstUsedIn"
                                  Grid.Row="2"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="2"
                                  MinHeight="150"
                                  x:FieldModifier="private"
                                  ItemsSource="{Binding UsedIns}"
                                  MouseDoubleClick="LstUsedByMouseDoubleClick"
                                  Style="{StaticResource ListViewStyle}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="500"
                                                    DisplayMemberBinding="{Binding Item.Name}"
                                                    Header="Name" />
                                    <GridViewColumn Width="auto"
                                                    DisplayMemberBinding="{Binding TypeDescription}"
                                                    Header="Type" />
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </Expander>
            </StackPanel>
        </ScrollViewer>

        <DockPanel Grid.Row="1">
            <Border HorizontalAlignment="Left" Style="{StaticResource ObjectLabelBox}">
                <TextBlock Text="{Binding ItemName}" />
            </Border>
            <StackPanel HorizontalAlignment="Right"
                        DockPanel.Dock="Right"
                        Orientation="Horizontal">
                <Button Width="75"
                        HorizontalAlignment="Right"
                        Click="Delete_Click"
                        Content="delete"
                        Style="{StaticResource ButtonStyle}" />
                <Button Width="75"
                        HorizontalAlignment="Right"
                        Click="CloseClick"
                        Content="Close"
                        Style="{StaticResource ButtonStyle}" />
            </StackPanel>
        </DockPanel>
    </Grid>
</UserControl>